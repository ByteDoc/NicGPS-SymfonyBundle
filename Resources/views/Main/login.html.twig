{% extends 'BytedocGpsBundle::layout.html.twig' %}

{% block head_javascripts %}

	{{ parent() }}

	<script>
	//alert("{{ asset('bundles/bytedocgps/ext') }}");
		// register the paths for required modules
		jQuery.sap.registerModulePath("net.bytedoc.UI5","{{ asset('bundles/bytedocgps/ext') }}");
			// JSONModelPHPFile is required directly, because class used directly
		jQuery.sap.registerModulePath("net.bytedoc.nicgps","{{ asset('bundles/bytedocgps/view') }}");
		jQuery.sap.registerModulePath("net.bytedoc","{{ asset('bundles/bytedocgps/ext') }}");
		jQuery.sap.require("net.bytedoc.Helper");
		
		// create all the Workset Items and View Array
		var oModels = {};
		var oViews = {};
		var navigationItems = []; // Navigation Items
		// initiate the structure that holds the Metadata for
		//   Navigation, Views, Data Entities
		var shellWorksetItems = {
			WI_Login : {
				key : "wi_login",
				text : "Login",
				view : null,
				entity : null,
				viewName : "net.bytedoc.nicgps.Login"
			}
		};
		// create Models, Views and Workitems
		jQuery.each(shellWorksetItems, function(key, item) {
			if(item.viewName != null) {
				oViews[item.viewName] = sap.ui.view({
					type : sap.ui.core.mvc.ViewType.JS,
					viewName : item.viewName
				});
				item.view = oViews[item.viewName];
			}
			navigationItems.push(new sap.ui.ux3.NavigationItem(key,{item:item.key,text:item.text}));
		});
		
		oLoginErrorText = new sap.ui.commons.TextView({
			text : "{{ simpleError }}",
			semanticColor : sap.ui.commons.TextViewColor.Critical
		});

				
		// Shell
		var oShell = new sap.ui.ux3.Shell("myShell", {
			designType: sap.ui.ux3.ShellDesignType.Crystal,
				// ShellDesignType: Standard, Crystal, Light
			headerType: sap.ui.ux3.ShellHeaderType.SlimNavigation,
				// ShellHeaderType: Standard, BrandOnly, NoNavigation, SlimNavigation
			showPane: true,
			showTools: true,
			showFeederTool: false,
			showSearchTool: false,
			appTitle: "GPS Login",
			showLogoutButton: false,
			worksetItems: navigationItems,
			content: shellWorksetItems["WI_Login"].view,
			worksetItemSelected: function(oEvent) {
				var sId = oEvent.getParameter("id");
				var oShell = oEvent.oSource;
				oShell.setContent(shellWorksetItems[sId].view);
			},
			headerItems: [
				oLoginErrorText
			]
		});
		
		oShell.placeAt('shell');
		
		
		var mydebug = {};
		var mydebug1 = {};
		var mydebug2 = {};
		var mydebug3 = {};
		
		
	</script>
{% endblock %}

{% block title %}
GPS Login
{% endblock %}

{% block body %}

	<form action="{{ path('logincheck') }}" method="post">
		<div id='shell'></div>
	</form>

	
{% endblock %}

